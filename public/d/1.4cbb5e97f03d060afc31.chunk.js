webpackJsonp([1],{112:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var d,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var r=t.length-1;r>=0;r--)(d=t[r])&&(a=(i<3?d(a):i>3?d(n,e,a):d(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a};Object.defineProperty(n,"__esModule",{value:!0});var d=e(1),i=e(14),a=e(32),r=e(24),m=e(212),c=e(213),l=e(215),u=e(214),s=e(70),p=[{path:"",component:u.MdComponent,children:[{path:"",redirectTo:"button",pathMatch:"full"},{path:"button",component:m.MDemoButtonComponent},{path:"input",component:c.MDemoInputComponent},{path:"show",component:l.MDemoShowComponent}]}],b=r.RouterModule.forChild(p),g=function(){function MdModule(){this.name="ADM"}return MdModule}();g=o([d.NgModule({imports:[i.CommonModule,b,a.FormsModule,s.MaterialModule],declarations:[u.MdComponent,m.MDemoButtonComponent,c.MDemoInputComponent,l.MDemoShowComponent,l.DialogResultExampleDialog],providers:[s.MaterialModule],entryComponents:[l.DialogResultExampleDialog]})],g),n.MdModule=g},212:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var d,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var r=t.length-1;r>=0;r--)(d=t[r])&&(a=(i<3?d(a):i>3?d(n,e,a):d(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a};Object.defineProperty(n,"__esModule",{value:!0});var d=e(1),i=function(){function MDemoButtonComponent(){this.seasons=["Winter","Spring","Summer","Autumn"],this.checked=!1,this.indeterminate=!1,this.align="start",this.disabled=!1}return MDemoButtonComponent}();i=o([d.Component({selector:"mdemo-button",template:e(216)})],i),n.MDemoButtonComponent=i},213:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var d,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var r=t.length-1;r>=0;r--)(d=t[r])&&(a=(i<3?d(a):i>3?d(n,e,a):d(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a};Object.defineProperty(n,"__esModule",{value:!0});var d=e(1),i=function(){function MDemoInputComponent(){this.inputtxt="this is str",this.inputtxt2="",this.autoTicks=!1,this.invert=!1,this.max=100,this.min=0,this.showTicks=!1,this.step=1,this.thumbLabel=!1,this.value=0,this.vertical=!1,this.testtick=3,this._tickInterval=1,this.foods=[{value:"steak-0",viewValue:"Steak"},{value:"pizza-1",viewValue:"Pizza"},{value:"tacos-2",viewValue:"Tacos"}]}return Object.defineProperty(MDemoInputComponent.prototype,"tickInterval",{get:function(){return this.showTicks?this.autoTicks?"auto":this._tickInterval:null},set:function(t){this._tickInterval=Number(t)},enumerable:!0,configurable:!0}),MDemoInputComponent}();i=o([d.Component({selector:"mdemo-input",template:e(217)})],i),n.MDemoInputComponent=i},214:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var d,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var r=t.length-1;r>=0;r--)(d=t[r])&&(a=(i<3?d(a):i>3?d(n,e,a):d(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a};Object.defineProperty(n,"__esModule",{value:!0});var d=e(1),i=function(){function MdComponent(){}return MdComponent.prototype.ngOnInit=function(){console.log("MdModule")},MdComponent}();i=o([d.Component({selector:"md",template:"\n\t\t<h1>ttt</h1>\n\t\t<router-outlet></router-outlet>\n\t"})],i),n.MdComponent=i},215:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var d,i=arguments.length,a=i<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,n,e,o);else for(var r=t.length-1;r>=0;r--)(d=t[r])&&(a=(i<3?d(a):i>3?d(n,e,a):d(n,e))||a);return i>3&&a&&Object.defineProperty(n,e,a),a},d=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};Object.defineProperty(n,"__esModule",{value:!0});var i=e(1),a=e(70),r=function(){function MDemoShowComponent(t){this.dialog=t,this.color="primary",this.mode="determinate",this.value=50,this.bufferValue=75,this.availableColors=[{name:"none",color:""},{name:"Primary",color:"primary"},{name:"Accent",color:"accent"},{name:"Warn",color:"warn"}]}return MDemoShowComponent.prototype.openDialog=function(){var t=this;this.dialog.open(m).afterClosed().subscribe(function(n){t.selectedOption=n})},MDemoShowComponent}();r=o([i.Component({selector:"mdemo-show",template:e(218)}),d("design:paramtypes",[a.MdDialog])],r),n.MDemoShowComponent=r;var m=function(){function DialogResultExampleDialog(t){this.dialogRef=t}return DialogResultExampleDialog}();m=o([i.Component({selector:"dialog-result-example-dialog",template:"\n\t\t<div>ffffeef efe</div>\n\t\t<md-dialog-content>Are you sure?</md-dialog-content>\n\t"}),d("design:paramtypes",[a.MdDialogRef])],m),n.DialogResultExampleDialog=m},216:function(t,n){t.exports='\n<md-card>\n\t<md-card-title>\n\t\tButton\n\t</md-card-title>\n\t<md-card-content>\n\t\t<button md-button>Click me!</button>\n\t\t<button md-raised-button>Click me!</button>\n\t\t<button md-icon-button><md-icon>home</md-icon></button>\n\t\t<button md-fab><md-icon>favorite</md-icon></button>\n\t\t<button md-mini-fab><md-icon>fingerprint</md-icon></button>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tButton Size\n\t</md-card-title>\n\t<md-card-content>\n\t\t<button class="btn-xs" md-raised-button>Extra Small</button>\n\t\t<button class="btn-sm" md-raised-button>Small</button>\n\t\t<button class="btn-df" md-raised-button>Default</button>\n\t\t<button class="btn-lg" md-raised-button>Large</button>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tButton Color\n\t</md-card-title>\n\t<md-card-content>\n\t\t<button class="btn-df blue" md-raised-button>blue</button>\n\t\t<button class="btn-df green" md-raised-button>green</button>\n\t\t<button class="btn-df orange" md-raised-button>orange</button>\n\t\t<button class="btn-df red" md-raised-button>red</button>\n\t\t<button class="btn-df grey" md-raised-button>grey</button>\n\t\t<button class="btn-df cyan" md-raised-button>cyan</button>\n\t\t<button class="btn-df yellow" md-raised-button>yellow</button>\n\t\t<button class="btn-df purple" md-raised-button>purple</button>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tRadio Button\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-radio-group [(ngModel)]="favoriteSeason">\n\t\t\t<md-radio-button *ngFor="let season of seasons" [value]="season">\n\t\t\t\t{{season}}\n\t\t\t</md-radio-button>\n\t\t\t<br>\n\t\t</md-radio-group>\n\t\t<br><br>\n\t\t<div>Your favorite season is: {{favoriteSeason}}</div>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tCheckbox\n\t</md-card-title>\n\t<md-card-content>\n\t\t<h2 class="example-h2">Checkbox configuration</h2>\n\t\t<div>\n\t\t\t<md-checkbox [(ngModel)]="checked">Check me!</md-checkbox>\n      \t\t<md-checkbox [(ngModel)]="indeterminate">Indeterminate</md-checkbox>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<label>Align: {{align}}</label><br>\n\t\t\t<md-radio-group [(ngModel)]="align">\n\t\t\t\t<md-radio-button value="start">Start</md-radio-button>\n\t\t\t\t<md-radio-button value="end">End</md-radio-button>\n\t\t\t</md-radio-group>\n\t\t</div>\n\t\t<div>\n\t\t\t<md-checkbox [(ngModel)]="disabled">Disabled</md-checkbox>\n\t\t</div>\n\n\t\t<hr>\n\t\t<md-checkbox\n         \n          [checked]="checked"\n          [indeterminate]="indeterminate"\n          [align]="align"\n          [disabled]="disabled">\n        I\'m a checkbox\n      </md-checkbox>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tSlide Toggle\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-slide-toggle [(ngModel)]="tchecked">Checked!</md-slide-toggle>\n\t\t<md-slide-toggle [disabled]=true>Disabled</md-slide-toggle>\n\t\t<p>\n\t\t\tcheck: {{tchecked ? "Checked" : "Not Checked"}}\n\t\t</p>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tButton toggle\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-button-toggle-group #group="mdButtonToggleGroup">\n\t\t\t<md-button-toggle value="left">\n\t\t\t\t<md-icon>format_align_left</md-icon>\n\t\t\t</md-button-toggle>\n\t\t\t<md-button-toggle value="center">\n\t\t\t\t<md-icon>format_align_center</md-icon>\n\t\t\t</md-button-toggle>\n\t\t\t<md-button-toggle value="right">\n\t\t\t\t<md-icon>format_align_right</md-icon>\n\t\t\t</md-button-toggle>\n\t\t\t<md-button-toggle value="justify" disabled>\n\t\t\t\t<md-icon>format_align_justify</md-icon>\n\t\t\t</md-button-toggle>\n\t\t</md-button-toggle-group>\n\t\t<br>\n\t\t<div style="margin:10px 0;">Selected value: {{group.value}}</div>\n\t</md-card-content>\n</md-card>\n\n\n<pre>\n\t<code class="html">\n\t\t\n\t</code>\n</pre>\n'},217:function(t,n){t.exports='\n<md-card>\n\t<md-card-title>\n\t\tInput\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-input-container>\n\t\t\t<input mdInput placeholder="Company (disabled)" disabled value="Google">\n\t\t</md-input-container>\n\t\t<br>\n\n\t\t<md-input-container>\n\t\t\t<input [(ngModel)]="inputtxt" mdInput placeholder="First name" style="width:400px;font-size:2.5rem">\n\t\t</md-input-container>\n\t\t<md-input-container>\n\t\t\t<input [(ngModel)]="inputtxt2" mdInput placeholder="Long Last Name That Will Be Truncated">\n\t\t</md-input-container>\n\t\t<br>\n\t\t{{inputtxt}} {{inputtxt2}}\n\n\t</md-card-content>\n</md-card>\n\n<br>\n<md-card>\n\t<md-card-title>\n\t\tSlider\n\t</md-card-title>\n\t<md-card-content>\n\t\t<div>\n\t\t\t<md-input-container>\n\t\t\t\t<input mdInput type="number" placeholder="Value" [(ngModel)]="value">\n\t\t\t</md-input-container>\n\t\t\t<md-input-container>\n\t\t\t\t<input mdInput type="number" placeholder="Min value" [(ngModel)]="min">\n\t\t\t</md-input-container>\n\t\t\t<md-input-container>\n\t\t\t\t<input mdInput type="number" placeholder="Max value" [(ngModel)]="max">\n\t\t\t</md-input-container>\n\t\t\t<md-input-container>\n\t\t\t\t<input mdInput type="number" placeholder="Step size" [(ngModel)]="step">\n\t\t\t</md-input-container>\n\t\t</div>\n\n\t\t<section class="example-section">\n\t\t\t\x3c!--<md-input-container>\n\t\t\t\t<input mdInput type="number" placeholder="Tick interval" [(ngModel)]="testtick">\n\t\t\t</md-input-container>--\x3e\n\t\t<md-checkbox [(ngModel)]="showTicks">Show ticks</md-checkbox>\n\t\t\x3c!--<md-checkbox [(ngModel)]="autoTicks" *ngIf="showTicks">Auto ticks</md-checkbox>--\x3e\n\t\t<md-input-container *ngIf="showTicks">\n\t\t\t<input mdInput type="number" placeholder="Tick interval" [(ngModel)]="tickInterval">\n\t\t</md-input-container>\n\t\t</section>\n\n\t\t<section class="example-section">\n\t\t<md-checkbox [(ngModel)]="thumbLabel">Show thumb label</md-checkbox>\n\t\t</section>\n\n\t\t<div>\n\t\t\t<md-checkbox [(ngModel)]="vertical">Vertical</md-checkbox>\n\t\t\t<md-checkbox [(ngModel)]="invert">Inverted</md-checkbox>\n\t\t</div>\n\n\t\t<section class="example-section">\n\t\t<md-checkbox [(ngModel)]="disabled">Disabled</md-checkbox>\n\t\t</section>\n\n<hr>\n\t\t<h2>Result</h2>\n\t\t<md-slider style="width:300px;"\n\t\t\t[invert]="invert"\n\t\t\t[max]="max"\n\t\t\t[min]="min"\n\t\t\t[step]="step"\n\t\t\t[thumb-label]="thumbLabel"\n\t\t\t[tick-interval]="tickInterval"\n\t\t\t[value]="value"\n\t\t\t[vertical]="vertical">\n\t\t</md-slider>\n\t</md-card-content>\n</md-card>\n\n<br>\n\x3c!--<md-card>\n\t<md-card-title>\n\t\tSlider\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-input-container>\n\t\t\t<input mdInput placeholder="State" [mdAutocomplete]="auto" [formControl]="stateCtrl">\n\t\t</md-input-container>\n\n\t\t<md-autocomplete #auto="mdAutocomplete">\n\t\t\t<md-option *ngFor="let state of filteredStates | async" [value]="state">\n\t\t\t\t{{ state }}\n\t\t\t</md-option>\n\t\t</md-autocomplete>\n\t</md-card-content>\n</md-card>--\x3e\n<br>\n<md-card>\n\t<md-card-title>\n\t\tDatepicker\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-input-container>\n\t\t\t<input mdInput [mdDatepicker]="picker" placeholder="Choose a date">\n\t\t\t<button mdSuffix [mdDatepickerToggle]="picker"></button>\n\t\t</md-input-container>\n\t\t<md-datepicker #picker></md-datepicker>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tMenu\n\t</md-card-title>\n\t<md-card-content>\n\t\t<button md-icon-button [mdMenuTriggerFor]="menu">\n\t\t\t<md-icon>more_vert</md-icon>\n\t\t</button>\n\t\t<md-menu #menu="mdMenu" yPosition="below" [overlapTrigger]="false">\n\t\t\t<button md-menu-item>\n\t\t\t\t<md-icon>dialpad</md-icon>\n\t\t\t\t<span>Redial</span>\n\t\t\t</button>\n\t\t\t<button md-menu-item disabled>\n\t\t\t\t<md-icon>voicemail</md-icon>\n\t\t\t\t<span>Check voicemail</span>\n\t\t\t</button>\n\t\t\t<button md-menu-item>\n\t\t\t\t<md-icon>notifications_off</md-icon>\n\t\t\t\t<span>Disable alerts</span>\n\t\t\t</button>\n\t\t</md-menu>\n\n\t\t<button md-icon-button [mdMenuTriggerFor]="menu2">\n\t\t\t<md-icon>more_vert</md-icon>\n\t\t</button>\n\t\t<md-menu #menu2="mdMenu" yPosition="above" [overlapTrigger]="false">\n\t\t\t<button md-menu-item>\n\t\t\t\t<md-icon>dialpad</md-icon>\n\t\t\t\t<span>Redial</span>\n\t\t\t</button>\n\t\t\t<button md-menu-item disabled>\n\t\t\t\t<md-icon>voicemail</md-icon>\n\t\t\t\t<span>Check voicemail</span>\n\t\t\t</button>\n\t\t\t<button md-menu-item>\n\t\t\t\t<md-icon>notifications_off</md-icon>\n\t\t\t\t<span>Disable alerts</span>\n\t\t\t</button>\n\t\t</md-menu>\n\n\t\t<button md-icon-button [mdMenuTriggerFor]="menu3">\n\t\t\t<md-icon>more_vert</md-icon>\n\t\t</button>\n\t\t<md-menu #menu3="mdMenu" xPosition="before" [overlapTrigger]="false">\n\t\t\t<button md-menu-item>\n\t\t\t\t<md-icon>dialpad</md-icon>\n\t\t\t\t<span>Redial</span>\n\t\t\t</button>\n\t\t\t<button md-menu-item disabled>\n\t\t\t\t<md-icon>voicemail</md-icon>\n\t\t\t\t<span>Check voicemail</span>\n\t\t\t</button>\n\t\t\t<button md-menu-item>\n\t\t\t\t<md-icon>notifications_off</md-icon>\n\t\t\t\t<span>Disable alerts</span>\n\t\t\t</button>\n\t\t</md-menu>\n\n\t\t<button md-icon-button [mdMenuTriggerFor]="menu4">\n\t\t\t<md-icon>more_vert</md-icon>\n\t\t</button>\n\t\t<md-menu #menu4="mdMenu" xPosition="after" [overlapTrigger]="false">\n\t\t\t<button md-menu-item>\n\t\t\t\t<md-icon>dialpad</md-icon>\n\t\t\t\t<span>Redial</span>\n\t\t\t</button>\n\t\t\t<button md-menu-item disabled>\n\t\t\t\t<md-icon>voicemail</md-icon>\n\t\t\t\t<span>Check voicemail</span>\n\t\t\t</button>\n\t\t\t<button md-menu-item>\n\t\t\t\t<md-icon>notifications_off</md-icon>\n\t\t\t\t<span>Disable alerts</span>\n\t\t\t</button>\n\t\t</md-menu>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tSelect\n\t</md-card-title>\n\t<md-card-content>\n\t\t<form>\n\t\t\t<md-select placeholder="Favorite food" [(ngModel)]="selectedValue" name="food">\n\t\t\t\t<md-option *ngFor="let food of foods" [value]="food.value">\n\t\t\t\t{{food.viewValue}}\n\t\t\t\t</md-option>\n\t\t\t</md-select>\n\n\t\t\t<p> Selected value: {{selectedValue}} </p>\n\t\t</form>\n\t</md-card-content>\n</md-card>\n'},218:function(t,n){t.exports='\n<md-card>\n\t<md-card-title>\n\t\tProgress Spinner & Bar\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-spinner style="display:inline-block;"></md-spinner>\n\t\t<md-progress-bar mode="indeterminate"></md-progress-bar>\n\t\t<br>\n\t\t<md-progress-bar mode="indeterminate" color="accent"></md-progress-bar>\n\t\t<br>\n\t\t<md-progress-bar mode="indeterminate" color="warn"></md-progress-bar>\n\t\t<br>\n\t\t\t<md-card>\n\t\t\t\t<md-card-content>\n\t\t\t\t\t<h2 class="example-h2">Progress spinner configuration</h2>\n\n\t\t\t\t\t<section class="example-section">\n\t\t\t\t\t<label class="example-margin">Color:</label>\n\t\t\t\t\t<md-radio-group [(ngModel)]="color">\n\t\t\t\t\t\t<md-radio-button class="example-margin" value="primary">\n\t\t\t\t\t\tPrimary\n\t\t\t\t\t\t</md-radio-button>\n\t\t\t\t\t\t<md-radio-button class="example-margin" value="accent">\n\t\t\t\t\t\tAccent\n\t\t\t\t\t\t</md-radio-button>\n\t\t\t\t\t\t<md-radio-button class="example-margin" value="warn">\n\t\t\t\t\t\tWarn\n\t\t\t\t\t\t</md-radio-button>\n\t\t\t\t\t</md-radio-group>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section class="example-section">\n\t\t\t\t\t<label class="example-margin">Mode:</label>\n\t\t\t\t\t<md-radio-group [(ngModel)]="mode">\n\t\t\t\t\t\t<md-radio-button class="example-margin" value="determinate">\n\t\t\t\t\t\tDeterminate\n\t\t\t\t\t\t</md-radio-button>\n\t\t\t\t\t\t<md-radio-button class="example-margin" value="indeterminate">\n\t\t\t\t\t\tIndeterminate\n\t\t\t\t\t\t</md-radio-button>\n\t\t\t\t\t</md-radio-group>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section class="example-section" *ngIf="mode == \'determinate\'">\n\t\t\t\t\t<label class="example-margin">Progress:</label>\n\t\t\t\t\t<md-slider class="example-margin" [(ngModel)]="value"></md-slider>\n\t\t\t\t\t</section>\n\t\t\t\t</md-card-content>\n\t\t\t\t</md-card>\n\t\t\t\t<md-card>\n\t\t\t\t<md-card-content>\n\t\t\t\t\t<h2 class="example-h2">Result</h2>\n\n\t\t\t\t\t<md-progress-spinner\n\t\t\t\t\t\tclass="example-margin"\n\t\t\t\t\t\t[color]="color"\n\t\t\t\t\t\t[mode]="mode"\n\t\t\t\t\t\t[value]="value">\n\t\t\t\t\t</md-progress-spinner>\n\t\t\t\t\t<md-progress-bar\n\t\t\t\t\t\tclass="example-margin"\n\t\t\t\t\t\t[color]="color"\n\t\t\t\t\t\t[mode]="mode"\n\t\t\t\t\t\t[value]="value"\n\t\t\t\t\t\t[bufferValue]="bufferValue">\n\t\t\t\t\t</md-progress-bar>\n\t\t\t\t</md-card-content>\n\t\t\t\t</md-card>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tTooltip\n\t</md-card-title>\n\t<md-card-content>\n\t\t<span mdTooltip="Tooltip!" mdTooltipPosition="before">before</span>\n\t\t<br><br>\n\t\t<span mdTooltip="Tooltip!" mdTooltipPosition="after">after</span>\n\t\t<br><br>\n\t\t<span mdTooltip="Tooltip!" mdTooltipPosition="above">above</span>\n\t\t<br><br>\n\t\t<span mdTooltip="Tooltip!" mdTooltipPosition="below">below</span>\n\t\t<br><br>\n\t\t<span mdTooltip="Tooltip!" mdTooltipPosition="left">left</span>\n\t\t<br><br>\n\t\t<span mdTooltip="Tooltip!" mdTooltipPosition="right">right</span>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tModal\n\t</md-card-title>\n\t<md-card-content>\n\t\t<div>\n\t\t\t<button md-button (click)="openDialog()">Launch dialog</button>\n\t\t\tYou chose: {{selectedOption}}\n\t\t</div>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tChips\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-chip-list class="mat-chip-list-stacked">\n\t\t\t<md-chip *ngFor="let chipColor of availableColors"\n\t\t\t\tselected="true"\n\t\t\t\tcolor="{{chipColor.color}}">\n\t\t\t\t{{chipColor.name}}\n\t\t\t</md-chip>\n\t\t</md-chip-list>\n\t</md-card-content>\n</md-card>\n<br>\n<md-card>\n\t<md-card-title>\n\t\tIcon\n\t</md-card-title>\n\t<md-card-content>\n\t\t<md-icon>home</md-icon>\n\t\t<md-icon>android</md-icon>\n\t\t<md-icon>cloud</md-icon>\n\t\t<md-icon>star</md-icon>\n\t\t<md-icon>favorite</md-icon>\n\t\t<md-icon>thumb_up</md-icon>\n\t\t<md-icon>flight</md-icon>\n\t\t<md-icon>notifications</md-icon>\n\t</md-card-content>\n</md-card>'}});